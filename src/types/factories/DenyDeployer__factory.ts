/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DenyDeployer, DenyDeployerInterface } from "../DenyDeployer";

const _abi = [
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_blacklisted",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_safeAddress",
        type: "address",
      },
    ],
    name: "deploy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "deployedContracts",
    outputs: [
      {
        internalType: "contract DenyTransactionGuard",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a8f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806361bc221a146100465780639a0dfa5d146100625780639ad1ee1014610077575b600080fd5b61004f60015481565b6040519081526020015b60405180910390f35b6100756100703660046101a3565b6100a2565b005b61008a61008536600461027a565b61013a565b6040516001600160a01b039091168152602001610059565b600082826040516100b290610164565b6100bd929190610293565b604051809103906000f0801580156100d9573d6000803e3d6000fd5b5060008054600180820183559180527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b038416179055805491925061013291906102f0565b600155505050565b6000818154811061014a57600080fd5b6000918252602090912001546001600160a01b0316905081565b61076b8061031883390190565b634e487b7160e01b600052604160045260246000fd5b80356001600160a01b038116811461019e57600080fd5b919050565b600080604083850312156101b657600080fd5b823567ffffffffffffffff808211156101ce57600080fd5b818501915085601f8301126101e257600080fd5b81356020828211156101f6576101f6610171565b8160051b604051601f19603f8301168101818110868211171561021b5761021b610171565b60405292835281830193508481018201928984111561023957600080fd5b948201945b8386101561025e5761024f86610187565b8552948201949382019361023e565b965061026d9050878201610187565b9450505050509250929050565b60006020828403121561028c57600080fd5b5035919050565b604080825283519082018190526000906020906060840190828701845b828110156102d55781516001600160a01b0316845292840192908401906001016102b0565b5050506001600160a01b039490941692019190915250919050565b8082018082111561031157634e487b7160e01b600052601160045260246000fd5b9291505056fe608060405234801561001057600080fd5b5060405161076b38038061076b83398101604081905261002f916100e9565b600080546001600160a01b0319166001600160a01b0383161781555b82518110156100af57600180600085848151811061006b5761006b6101bf565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806100a7816101d5565b91505061004b565b5050506101fc565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146100e457600080fd5b919050565b600080604083850312156100fc57600080fd5b82516001600160401b038082111561011357600080fd5b818501915085601f83011261012757600080fd5b815160208282111561013b5761013b6100b7565b8160051b604051601f19603f83011681018181108682111715610160576101606100b7565b60405292835281830193508481018201928984111561017e57600080fd5b948201945b838610156101a357610194866100cd565b85529482019493820193610183565b96506101b290508782016100cd565b9450505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016101f557634e487b7160e01b600052601160045260246000fd5b5060010190565b6105608061020b6000396000f3fe608060405234801561001057600080fd5b506004361061007a5760003560e01c80635578110c116100585780635578110c146100ca57806375f0bb52146100f55780639327136814610108578063dbac26e91461011a57005b806301ffc9a71461007c57806338eada1c146100a45780634ba79dfe146100b7575b005b61008f61008a366004610311565b61013d565b60405190151581526020015b60405180910390f35b61007a6100b236600461036a565b610174565b61007a6100c536600461036a565b6101fa565b6000546100dd906001600160a01b031681565b6040516001600160a01b03909116815260200161009b565b61007a610103366004610439565b610275565b61007a61011636600461051e565b5050565b61008f61012836600461036a565b60016020526000908152604090205460ff1681565b60006001600160e01b0319821663736bd41d60e11b148061016e57506001600160e01b031982166301ffc9a760e01b145b92915050565b6000546001600160a01b031633146101d35760405162461bcd60e51b815260206004820152601a60248201527f556e617574686f72697365643a204e6f7420746865207361666500000000000060448201526064015b60405180910390fd5b6001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b6000546001600160a01b031633146102545760405162461bcd60e51b815260206004820152601a60248201527f556e617574686f72697365643a204e6f7420746865207361666500000000000060448201526064016101ca565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6001600160a01b038b1660009081526001602052604090205460ff16156103045760405162461bcd60e51b815260206004820152603760248201527f596f75206172652073656e64696e6720746865207472616e73616374696f6e2060448201527f746f20616e20756e616c6c6f776564206164647265737300000000000000000060648201526084016101ca565b5050505050505050505050565b60006020828403121561032357600080fd5b81356001600160e01b03198116811461033b57600080fd5b9392505050565b6001600160a01b038116811461035757600080fd5b50565b803561036581610342565b919050565b60006020828403121561037c57600080fd5b813561033b81610342565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126103ae57600080fd5b813567ffffffffffffffff808211156103c9576103c9610387565b604051601f8301601f19908116603f011681019082821181831017156103f1576103f1610387565b8160405283815286602085880101111561040a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356002811061036557600080fd5b60008060008060008060008060008060006101608c8e03121561045b57600080fd5b6104648c61035a565b9a5060208c0135995067ffffffffffffffff8060408e0135111561048757600080fd5b6104978e60408f01358f0161039d565b99506104a560608e0161042a565b985060808d0135975060a08d0135965060c08d013595506104c860e08e0161035a565b94506104d76101008e0161035a565b9350806101208e013511156104eb57600080fd5b506104fd8d6101208e01358e0161039d565b915061050c6101408d0161035a565b90509295989b509295989b9093969950565b6000806040838503121561053157600080fd5b823591506020830135801515811461054857600080fd5b80915050925092905056fea164736f6c6343000811000aa164736f6c6343000811000a";

export class DenyDeployer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DenyDeployer> {
    return super.deploy(overrides || {}) as Promise<DenyDeployer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DenyDeployer {
    return super.attach(address) as DenyDeployer;
  }
  connect(signer: Signer): DenyDeployer__factory {
    return super.connect(signer) as DenyDeployer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DenyDeployerInterface {
    return new utils.Interface(_abi) as DenyDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DenyDeployer {
    return new Contract(address, _abi, signerOrProvider) as DenyDeployer;
  }
}
